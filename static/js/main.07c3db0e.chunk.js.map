{"version":3,"sources":["components/About.js","components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","mystyle","setMyStyle","_useState3","_useState4","btntext","setBtnText","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","border","Navbar","props","Fragment","concat","mode","href","title","aria-label","react_router_dom","aria-current","to","aboutText","toggleMode","htmlFor","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","text","setText","heading","value","onChange","event","target","rows","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","App","setMode","setAlert","message","setTimeout","body","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.07c3db0e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function About() {\r\n    const[mystyle,setMyStyle] = useState({\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    })\r\n    const[btntext,setBtnText] = useState(\"Enable Dark Mode\")\r\n    const toggleStyle =()=>{\r\n        if(mystyle.color === 'white'){\r\n            setMyStyle({\r\n                color:'black',\r\n                backgroundColor:'white',\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setMyStyle({\r\n                color:'white',\r\n                backgroundColor:'black',\r\n                border:'1px solid black'\r\n            })\r\n            setBtnText(\"Enable Light Mode\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container' style={mystyle}>\r\n            <h1 className='my-2'>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={mystyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary my-4\">{btntext}</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" /> \r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: \"About Text\"\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase!\",\"success\")\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LowerCase!\",\"success\")\r\n    }\r\n    const handleclearClick = () => {\r\n        let newText = \"\"\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared \",\"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Text Copied to Clipboard.\",\"success\")\r\n    }\r\n\r\n    const handleExtraSpaces=()=>{\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces has been removed\",\"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div style={{color:props.mode==='dark'?'white':'black'}} className='container'>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'#343a40':'white' , color:props.mode==='dark'?'white':'black'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick} >Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick} >Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleclearClick} >Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy} >CopyText</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n        </div>\r\n        <div style={{color:props.mode==='dark'?'white':'black'}} className=\"conatiner my-3\">\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").length-1} word, {text.length} Charaters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport React from 'react'\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#343a40';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    <BrowserRouter>\n      <Navbar title=\"TextUitils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        \n          <Routes>\n            <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analayze below\" mode={mode} />} />\n            <Route exact path=\"/about\" element={<About />} />\n          </Routes>\n        \n\n\n      </div>\n      </BrowserRouter>\n      {/* <About /> */}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}